Nonterminals useless in grammar

    entry


Terminals unused in grammar

    ELIF


State 16 conflicts: 1 shift/reduce
State 47 conflicts: 3 reduce/reduce
State 48 conflicts: 3 reduce/reduce
State 95 conflicts: 2 shift/reduce
State 109 conflicts: 1 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: FUNCTION IDENTIFIER '(' parameter ')' '{' body return '}'

    2 parameter: parameter ',' parameter
    3          | IDENTIFIER ':' datatype
    4          | ε

    5 datatype: NUMBERTYPE
    6         | STRINGTYPE
    7         | BOOLEANTYPE

    8 body: block body
    9     | ε

   10 block: WHILE '(' condition ')' '{' body '}'
   11      | IF '(' condition ')' '{' body '}' else
   12      | statement ';'
   13      | CONSOLELOG '(' STRINGVALUE ')' ';'
   14      | CONSOLELOG '(' IDENTIFIER ')' ';'

   15 else: ELSE '{' body '}'
   16     | ε

   17 condition: condition and_or condition
   18          | value relop value
   19          | value
   20          | TRUE
   21          | FALSE

   22 statement: declaration IDENTIFIER ':' datatype init
   23          | IDENTIFIER '=' expression
   24          | IDENTIFIER relop expression

   25 declaration: LET
   26            | VAR
   27            | CONST

   28 init: '=' value
   29     | '=' expression
   30     | ε

   31 expression: expression addops term
   32           | term

   33 term: term mulops factor
   34     | factor

   35 factor: base exponent base
   36       | LOG '(' value ',' value ')'
   37       | base

   38 base: value
   39     | '(' expression ')'

   40 and_or: AND
   41       | OR

   42 exponent: POW

   43 mulops: MULT
   44       | DIV

   45 addops: ADD
   46       | SUB

   47 relop: LT
   48      | GT
   49      | LE
   50      | GE
   51      | EQ
   52      | NE

   53 number: INTEGER
   54       | FLOAT

   55 value: number
   56      | IDENTIFIER
   57      | STRINGVALUE
   58      | TRUE
   59      | FALSE
   60      | SCAN '(' ')'

   61 return: RETURN value ';'
   62       | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 10 11 13 14 36 39 60
    ')' (41) 1 10 11 13 14 36 39 60
    ',' (44) 2 36
    ':' (58) 3 22
    ';' (59) 12 13 14 61
    '=' (61) 23 28 29
    '{' (123) 1 10 11 15
    '}' (125) 1 10 11 15
    error (256)
    CONSOLELOG <treeNode> (258) 13 14
    SCAN <treeNode> (259) 60
    IF <treeNode> (260) 11
    WHILE <treeNode> (261) 10
    ELSE <treeNode> (262) 15
    RETURN <treeNode> (263) 61
    ELIF <treeNode> (264)
    LET <treeNode> (265) 25
    VAR <treeNode> (266) 26
    CONST <treeNode> (267) 27
    ADD <treeNode> (268) 45
    SUB <treeNode> (269) 46
    MULT <treeNode> (270) 43
    DIV <treeNode> (271) 44
    LOG <treeNode> (272) 36
    POW <treeNode> (273) 42
    GE <treeNode> (274) 50
    LE <treeNode> (275) 49
    GT <treeNode> (276) 48
    LT <treeNode> (277) 47
    EQ <treeNode> (278) 51
    NE <treeNode> (279) 52
    TRUE <treeNode> (280) 20 58
    FALSE <treeNode> (281) 21 59
    AND <treeNode> (282) 40
    OR <treeNode> (283) 41
    NUMBERTYPE <treeNode> (284) 5
    STRINGTYPE <treeNode> (285) 6
    BOOLEANTYPE <treeNode> (286) 7
    FUNCTION <treeNode> (287) 1
    INTEGER <treeNode> (288) 53
    FLOAT <treeNode> (289) 54
    IDENTIFIER <treeNode> (290) 1 3 14 22 23 24 56
    STRINGVALUE <treeNode> (291) 13 57


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    function <treeNode> (46)
        on left: 1
        on right: 0
    parameter <treeNode> (47)
        on left: 2 3 4
        on right: 1 2
    datatype <treeNode> (48)
        on left: 5 6 7
        on right: 3 22
    body <treeNode> (49)
        on left: 8 9
        on right: 1 8 10 11 15
    block <treeNode> (50)
        on left: 10 11 12 13 14
        on right: 8
    else <treeNode> (51)
        on left: 15 16
        on right: 11
    condition <treeNode> (52)
        on left: 17 18 19 20 21
        on right: 10 11 17
    statement <treeNode> (53)
        on left: 22 23 24
        on right: 12
    declaration <treeNode> (54)
        on left: 25 26 27
        on right: 22
    init <treeNode> (55)
        on left: 28 29 30
        on right: 22
    expression <treeNode> (56)
        on left: 31 32
        on right: 23 24 29 31 39
    term <treeNode> (57)
        on left: 33 34
        on right: 31 32 33
    factor <treeNode> (58)
        on left: 35 36 37
        on right: 33 34
    base <treeNode> (59)
        on left: 38 39
        on right: 35 37
    and_or <treeNode> (60)
        on left: 40 41
        on right: 17
    exponent <treeNode> (61)
        on left: 42
        on right: 35
    mulops <treeNode> (62)
        on left: 43 44
        on right: 33
    addops <treeNode> (63)
        on left: 45 46
        on right: 31
    relop <treeNode> (64)
        on left: 47 48 49 50 51 52
        on right: 18 24
    number <treeNode> (65)
        on left: 53 54
        on right: 55
    value <treeNode> (66)
        on left: 55 56 57 58 59 60
        on right: 18 19 28 36 38 61
    return <treeNode> (67)
        on left: 61 62
        on right: 1


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function  go to state 2


State 1

    1 function: FUNCTION • IDENTIFIER '(' parameter ')' '{' body return '}'

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: function • $end

    $end  shift, and go to state 4


State 3

    1 function: FUNCTION IDENTIFIER • '(' parameter ')' '{' body return '}'

    '('  shift, and go to state 5


State 4

    0 $accept: function $end •

    $default  accept


State 5

    1 function: FUNCTION IDENTIFIER '(' • parameter ')' '{' body return '}'

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (parameter)

    parameter  go to state 7


State 6

    3 parameter: IDENTIFIER • ':' datatype

    ':'  shift, and go to state 8


State 7

    1 function: FUNCTION IDENTIFIER '(' parameter • ')' '{' body return '}'
    2 parameter: parameter • ',' parameter

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 8

    3 parameter: IDENTIFIER ':' • datatype

    NUMBERTYPE   shift, and go to state 11
    STRINGTYPE   shift, and go to state 12
    BOOLEANTYPE  shift, and go to state 13

    datatype  go to state 14


State 9

    1 function: FUNCTION IDENTIFIER '(' parameter ')' • '{' body return '}'

    '{'  shift, and go to state 15


State 10

    2 parameter: parameter ',' • parameter

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (parameter)

    parameter  go to state 16


State 11

    5 datatype: NUMBERTYPE •

    $default  reduce using rule 5 (datatype)


State 12

    6 datatype: STRINGTYPE •

    $default  reduce using rule 6 (datatype)


State 13

    7 datatype: BOOLEANTYPE •

    $default  reduce using rule 7 (datatype)


State 14

    3 parameter: IDENTIFIER ':' datatype •

    $default  reduce using rule 3 (parameter)


State 15

    1 function: FUNCTION IDENTIFIER '(' parameter ')' '{' • body return '}'

    CONSOLELOG  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    LET         shift, and go to state 20
    VAR         shift, and go to state 21
    CONST       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (body)

    body         go to state 24
    block        go to state 25
    statement    go to state 26
    declaration  go to state 27


State 16

    2 parameter: parameter • ',' parameter
    2          | parameter ',' parameter •

    ','  shift, and go to state 10

    ','       [reduce using rule 2 (parameter)]
    $default  reduce using rule 2 (parameter)


State 17

   13 block: CONSOLELOG • '(' STRINGVALUE ')' ';'
   14      | CONSOLELOG • '(' IDENTIFIER ')' ';'

    '('  shift, and go to state 28


State 18

   11 block: IF • '(' condition ')' '{' body '}' else

    '('  shift, and go to state 29


State 19

   10 block: WHILE • '(' condition ')' '{' body '}'

    '('  shift, and go to state 30


State 20

   25 declaration: LET •

    $default  reduce using rule 25 (declaration)


State 21

   26 declaration: VAR •

    $default  reduce using rule 26 (declaration)


State 22

   27 declaration: CONST •

    $default  reduce using rule 27 (declaration)


State 23

   23 statement: IDENTIFIER • '=' expression
   24          | IDENTIFIER • relop expression

    GE   shift, and go to state 31
    LE   shift, and go to state 32
    GT   shift, and go to state 33
    LT   shift, and go to state 34
    EQ   shift, and go to state 35
    NE   shift, and go to state 36
    '='  shift, and go to state 37

    relop  go to state 38


State 24

    1 function: FUNCTION IDENTIFIER '(' parameter ')' '{' body • return '}'

    RETURN  shift, and go to state 39

    $default  reduce using rule 62 (return)

    return  go to state 40


State 25

    8 body: block • body

    CONSOLELOG  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    LET         shift, and go to state 20
    VAR         shift, and go to state 21
    CONST       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (body)

    body         go to state 41
    block        go to state 25
    statement    go to state 26
    declaration  go to state 27


State 26

   12 block: statement • ';'

    ';'  shift, and go to state 42


State 27

   22 statement: declaration • IDENTIFIER ':' datatype init

    IDENTIFIER  shift, and go to state 43


State 28

   13 block: CONSOLELOG '(' • STRINGVALUE ')' ';'
   14      | CONSOLELOG '(' • IDENTIFIER ')' ';'

    IDENTIFIER   shift, and go to state 44
    STRINGVALUE  shift, and go to state 45


State 29

   11 block: IF '(' • condition ')' '{' body '}' else

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 47
    FALSE        shift, and go to state 48
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    condition  go to state 53
    number     go to state 54
    value      go to state 55


State 30

   10 block: WHILE '(' • condition ')' '{' body '}'

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 47
    FALSE        shift, and go to state 48
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    condition  go to state 56
    number     go to state 54
    value      go to state 55


State 31

   50 relop: GE •

    $default  reduce using rule 50 (relop)


State 32

   49 relop: LE •

    $default  reduce using rule 49 (relop)


State 33

   48 relop: GT •

    $default  reduce using rule 48 (relop)


State 34

   47 relop: LT •

    $default  reduce using rule 47 (relop)


State 35

   51 relop: EQ •

    $default  reduce using rule 51 (relop)


State 36

   52 relop: NE •

    $default  reduce using rule 52 (relop)


State 37

   23 statement: IDENTIFIER '=' • expression

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    expression  go to state 61
    term        go to state 62
    factor      go to state 63
    base        go to state 64
    number      go to state 54
    value       go to state 65


State 38

   24 statement: IDENTIFIER relop • expression

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    expression  go to state 66
    term        go to state 62
    factor      go to state 63
    base        go to state 64
    number      go to state 54
    value       go to state 65


State 39

   61 return: RETURN • value ';'

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    number  go to state 54
    value   go to state 67


State 40

    1 function: FUNCTION IDENTIFIER '(' parameter ')' '{' body return • '}'

    '}'  shift, and go to state 68


State 41

    8 body: block body •

    $default  reduce using rule 8 (body)


State 42

   12 block: statement ';' •

    $default  reduce using rule 12 (block)


State 43

   22 statement: declaration IDENTIFIER • ':' datatype init

    ':'  shift, and go to state 69


State 44

   14 block: CONSOLELOG '(' IDENTIFIER • ')' ';'

    ')'  shift, and go to state 70


State 45

   13 block: CONSOLELOG '(' STRINGVALUE • ')' ';'

    ')'  shift, and go to state 71


State 46

   60 value: SCAN • '(' ')'

    '('  shift, and go to state 72


State 47

   20 condition: TRUE •
   58 value: TRUE •

    AND       reduce using rule 20 (condition)
    AND       [reduce using rule 58 (value)]
    OR        reduce using rule 20 (condition)
    OR        [reduce using rule 58 (value)]
    ')'       reduce using rule 20 (condition)
    ')'       [reduce using rule 58 (value)]
    $default  reduce using rule 58 (value)


State 48

   21 condition: FALSE •
   59 value: FALSE •

    AND       reduce using rule 21 (condition)
    AND       [reduce using rule 59 (value)]
    OR        reduce using rule 21 (condition)
    OR        [reduce using rule 59 (value)]
    ')'       reduce using rule 21 (condition)
    ')'       [reduce using rule 59 (value)]
    $default  reduce using rule 59 (value)


State 49

   53 number: INTEGER •

    $default  reduce using rule 53 (number)


State 50

   54 number: FLOAT •

    $default  reduce using rule 54 (number)


State 51

   56 value: IDENTIFIER •

    $default  reduce using rule 56 (value)


State 52

   57 value: STRINGVALUE •

    $default  reduce using rule 57 (value)


State 53

   11 block: IF '(' condition • ')' '{' body '}' else
   17 condition: condition • and_or condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 75

    and_or  go to state 76


State 54

   55 value: number •

    $default  reduce using rule 55 (value)


State 55

   18 condition: value • relop value
   19          | value •

    GE  shift, and go to state 31
    LE  shift, and go to state 32
    GT  shift, and go to state 33
    LT  shift, and go to state 34
    EQ  shift, and go to state 35
    NE  shift, and go to state 36

    $default  reduce using rule 19 (condition)

    relop  go to state 77


State 56

   10 block: WHILE '(' condition • ')' '{' body '}'
   17 condition: condition • and_or condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 78

    and_or  go to state 76


State 57

   36 factor: LOG • '(' value ',' value ')'

    '('  shift, and go to state 79


State 58

   58 value: TRUE •

    $default  reduce using rule 58 (value)


State 59

   59 value: FALSE •

    $default  reduce using rule 59 (value)


State 60

   39 base: '(' • expression ')'

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    expression  go to state 80
    term        go to state 62
    factor      go to state 63
    base        go to state 64
    number      go to state 54
    value       go to state 65


State 61

   23 statement: IDENTIFIER '=' expression •
   31 expression: expression • addops term

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 23 (statement)

    addops  go to state 83


State 62

   32 expression: term •
   33 term: term • mulops factor

    MULT  shift, and go to state 84
    DIV   shift, and go to state 85

    $default  reduce using rule 32 (expression)

    mulops  go to state 86


State 63

   34 term: factor •

    $default  reduce using rule 34 (term)


State 64

   35 factor: base • exponent base
   37       | base •

    POW  shift, and go to state 87

    $default  reduce using rule 37 (factor)

    exponent  go to state 88


State 65

   38 base: value •

    $default  reduce using rule 38 (base)


State 66

   24 statement: IDENTIFIER relop expression •
   31 expression: expression • addops term

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 24 (statement)

    addops  go to state 83


State 67

   61 return: RETURN value • ';'

    ';'  shift, and go to state 89


State 68

    1 function: FUNCTION IDENTIFIER '(' parameter ')' '{' body return '}' •

    $default  reduce using rule 1 (function)


State 69

   22 statement: declaration IDENTIFIER ':' • datatype init

    NUMBERTYPE   shift, and go to state 11
    STRINGTYPE   shift, and go to state 12
    BOOLEANTYPE  shift, and go to state 13

    datatype  go to state 90


State 70

   14 block: CONSOLELOG '(' IDENTIFIER ')' • ';'

    ';'  shift, and go to state 91


State 71

   13 block: CONSOLELOG '(' STRINGVALUE ')' • ';'

    ';'  shift, and go to state 92


State 72

   60 value: SCAN '(' • ')'

    ')'  shift, and go to state 93


State 73

   40 and_or: AND •

    $default  reduce using rule 40 (and_or)


State 74

   41 and_or: OR •

    $default  reduce using rule 41 (and_or)


State 75

   11 block: IF '(' condition ')' • '{' body '}' else

    '{'  shift, and go to state 94


State 76

   17 condition: condition and_or • condition

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 47
    FALSE        shift, and go to state 48
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    condition  go to state 95
    number     go to state 54
    value      go to state 55


State 77

   18 condition: value relop • value

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    number  go to state 54
    value   go to state 96


State 78

   10 block: WHILE '(' condition ')' • '{' body '}'

    '{'  shift, and go to state 97


State 79

   36 factor: LOG '(' • value ',' value ')'

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    number  go to state 54
    value   go to state 98


State 80

   31 expression: expression • addops term
   39 base: '(' expression • ')'

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82
    ')'  shift, and go to state 99

    addops  go to state 83


State 81

   45 addops: ADD •

    $default  reduce using rule 45 (addops)


State 82

   46 addops: SUB •

    $default  reduce using rule 46 (addops)


State 83

   31 expression: expression addops • term

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    term    go to state 100
    factor  go to state 63
    base    go to state 64
    number  go to state 54
    value   go to state 65


State 84

   43 mulops: MULT •

    $default  reduce using rule 43 (mulops)


State 85

   44 mulops: DIV •

    $default  reduce using rule 44 (mulops)


State 86

   33 term: term mulops • factor

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    factor  go to state 101
    base    go to state 64
    number  go to state 54
    value   go to state 65


State 87

   42 exponent: POW •

    $default  reduce using rule 42 (exponent)


State 88

   35 factor: base exponent • base

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    base    go to state 102
    number  go to state 54
    value   go to state 65


State 89

   61 return: RETURN value ';' •

    $default  reduce using rule 61 (return)


State 90

   22 statement: declaration IDENTIFIER ':' datatype • init

    '='  shift, and go to state 103

    $default  reduce using rule 30 (init)

    init  go to state 104


State 91

   14 block: CONSOLELOG '(' IDENTIFIER ')' ';' •

    $default  reduce using rule 14 (block)


State 92

   13 block: CONSOLELOG '(' STRINGVALUE ')' ';' •

    $default  reduce using rule 13 (block)


State 93

   60 value: SCAN '(' ')' •

    $default  reduce using rule 60 (value)


State 94

   11 block: IF '(' condition ')' '{' • body '}' else

    CONSOLELOG  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    LET         shift, and go to state 20
    VAR         shift, and go to state 21
    CONST       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (body)

    body         go to state 105
    block        go to state 25
    statement    go to state 26
    declaration  go to state 27


State 95

   17 condition: condition • and_or condition
   17          | condition and_or condition •

    AND  shift, and go to state 73
    OR   shift, and go to state 74

    AND       [reduce using rule 17 (condition)]
    OR        [reduce using rule 17 (condition)]
    $default  reduce using rule 17 (condition)

    and_or  go to state 76


State 96

   18 condition: value relop value •

    $default  reduce using rule 18 (condition)


State 97

   10 block: WHILE '(' condition ')' '{' • body '}'

    CONSOLELOG  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    LET         shift, and go to state 20
    VAR         shift, and go to state 21
    CONST       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (body)

    body         go to state 106
    block        go to state 25
    statement    go to state 26
    declaration  go to state 27


State 98

   36 factor: LOG '(' value • ',' value ')'

    ','  shift, and go to state 107


State 99

   39 base: '(' expression ')' •

    $default  reduce using rule 39 (base)


State 100

   31 expression: expression addops term •
   33 term: term • mulops factor

    MULT  shift, and go to state 84
    DIV   shift, and go to state 85

    $default  reduce using rule 31 (expression)

    mulops  go to state 86


State 101

   33 term: term mulops factor •

    $default  reduce using rule 33 (term)


State 102

   35 factor: base exponent base •

    $default  reduce using rule 35 (factor)


State 103

   28 init: '=' • value
   29     | '=' • expression

    SCAN         shift, and go to state 46
    LOG          shift, and go to state 57
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52
    '('          shift, and go to state 60

    expression  go to state 108
    term        go to state 62
    factor      go to state 63
    base        go to state 64
    number      go to state 54
    value       go to state 109


State 104

   22 statement: declaration IDENTIFIER ':' datatype init •

    $default  reduce using rule 22 (statement)


State 105

   11 block: IF '(' condition ')' '{' body • '}' else

    '}'  shift, and go to state 110


State 106

   10 block: WHILE '(' condition ')' '{' body • '}'

    '}'  shift, and go to state 111


State 107

   36 factor: LOG '(' value ',' • value ')'

    SCAN         shift, and go to state 46
    TRUE         shift, and go to state 58
    FALSE        shift, and go to state 59
    INTEGER      shift, and go to state 49
    FLOAT        shift, and go to state 50
    IDENTIFIER   shift, and go to state 51
    STRINGVALUE  shift, and go to state 52

    number  go to state 54
    value   go to state 112


State 108

   29 init: '=' expression •
   31 expression: expression • addops term

    ADD  shift, and go to state 81
    SUB  shift, and go to state 82

    $default  reduce using rule 29 (init)

    addops  go to state 83


State 109

   28 init: '=' value •
   38 base: value •

    ';'       reduce using rule 28 (init)
    ';'       [reduce using rule 38 (base)]
    $default  reduce using rule 38 (base)


State 110

   11 block: IF '(' condition ')' '{' body '}' • else

    ELSE  shift, and go to state 113

    $default  reduce using rule 16 (else)

    else  go to state 114


State 111

   10 block: WHILE '(' condition ')' '{' body '}' •

    $default  reduce using rule 10 (block)


State 112

   36 factor: LOG '(' value ',' value • ')'

    ')'  shift, and go to state 115


State 113

   15 else: ELSE • '{' body '}'

    '{'  shift, and go to state 116


State 114

   11 block: IF '(' condition ')' '{' body '}' else •

    $default  reduce using rule 11 (block)


State 115

   36 factor: LOG '(' value ',' value ')' •

    $default  reduce using rule 36 (factor)


State 116

   15 else: ELSE '{' • body '}'

    CONSOLELOG  shift, and go to state 17
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    LET         shift, and go to state 20
    VAR         shift, and go to state 21
    CONST       shift, and go to state 22
    IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 9 (body)

    body         go to state 117
    block        go to state 25
    statement    go to state 26
    declaration  go to state 27


State 117

   15 else: ELSE '{' body • '}'

    '}'  shift, and go to state 118


State 118

   15 else: ELSE '{' body '}' •

    $default  reduce using rule 15 (else)
