[1m[32m
[1m[33m
PARAM idx2
[1m[32m[1m[33mPARAM idx1
[1m[32m[1m[33mPARAM arr
[1m[32mt0 = 4 * idx1
u0 = arr[t0]
temp = arr
t1 = 4 * idx1
u1 = arr[t1]
t2 = 4 * idx2
u2 = arr[t2]
u1 = u2
t3 = 4 * idx2
u3 = arr[t3]
u3 = temp
[1m[33m
PARAM hi
[1m[32m[1m[33mPARAM lo
[1m[32m[1m[33mPARAM arr
[1m[32mt4 = 4 * hi
u4 = arr[t4]
pivot = arr
t5 = lo - 1
idx = t5
i = lo
[1m[34m
LABEL L0:
[1m[32m
if i < hi
[1m[35mGOTO L1
[1m[32m[1m[35mGOTO L5
[1m[32m[1m[34m
LABEL L1:
[1m[32mt7 = 4 * i
u5 = arr[t7]
if arr <= pivot
[1m[35mGOTO L2
[1m[32m[1m[35mGOTO L3
[1m[32m[1m[34m
LABEL L2:
[1m[32m[1m[33m
FUNCTION CALL swap
[1m[32m[1m[35mJUMP TO L4
[1m[34m
LABEL L3:
[1m[32m[1m[34m
LABEL L4:
[1m[32m[1m[35mJUMP TO L0
[1m[32m[1m[34m
LABEL L5:
[1m[32m[1m[33m
FUNCTION CALL swap
[1m[32m[1m[33m
RETURN idx
[1m[32m[1m[33m
PARAM hi
[1m[32m[1m[33mPARAM lo
[1m[32m[1m[33mPARAM arr
[1m[32m[1m[33m
FUNCTION CALL partition
[1m[32mpivotIndex = =
t10 = pivotIndex - 1
[1m[33m
FUNCTION CALL quickSort
[1m[32mt11 = pivotIndex + 1
[1m[33m
FUNCTION CALL quickSort
[1m[32marrayInput = =
arrayLength = 5
t12 = arrayLength - 1
[1m[33m
FUNCTION CALL quickSort
[1m[32m